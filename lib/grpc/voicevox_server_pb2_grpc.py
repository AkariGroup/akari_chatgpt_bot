# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import voicevox_server_pb2 as voicevox__server__pb2


class VoicevoxServerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetVoicevox = channel.unary_unary(
                '/voicevox_server.VoicevoxServerService/SetVoicevox',
                request_serializer=voicevox__server__pb2.SetVoicevoxRequest.SerializeToString,
                response_deserializer=voicevox__server__pb2.SetVoicevoxReply.FromString,
                )
        self.InterruptVoicevox = channel.unary_unary(
                '/voicevox_server.VoicevoxServerService/InterruptVoicevox',
                request_serializer=voicevox__server__pb2.InterruptVoicevoxRequest.SerializeToString,
                response_deserializer=voicevox__server__pb2.InterruptVoicevoxReply.FromString,
                )
        self.SetVoicePlayFlg = channel.unary_unary(
                '/voicevox_server.VoicevoxServerService/SetVoicePlayFlg',
                request_serializer=voicevox__server__pb2.SetVoicePlayFlgRequest.SerializeToString,
                response_deserializer=voicevox__server__pb2.SetVoicePlayFlgReply.FromString,
                )


class VoicevoxServerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetVoicevox(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InterruptVoicevox(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVoicePlayFlg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VoicevoxServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetVoicevox': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVoicevox,
                    request_deserializer=voicevox__server__pb2.SetVoicevoxRequest.FromString,
                    response_serializer=voicevox__server__pb2.SetVoicevoxReply.SerializeToString,
            ),
            'InterruptVoicevox': grpc.unary_unary_rpc_method_handler(
                    servicer.InterruptVoicevox,
                    request_deserializer=voicevox__server__pb2.InterruptVoicevoxRequest.FromString,
                    response_serializer=voicevox__server__pb2.InterruptVoicevoxReply.SerializeToString,
            ),
            'SetVoicePlayFlg': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVoicePlayFlg,
                    request_deserializer=voicevox__server__pb2.SetVoicePlayFlgRequest.FromString,
                    response_serializer=voicevox__server__pb2.SetVoicePlayFlgReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'voicevox_server.VoicevoxServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VoicevoxServerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetVoicevox(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/voicevox_server.VoicevoxServerService/SetVoicevox',
            voicevox__server__pb2.SetVoicevoxRequest.SerializeToString,
            voicevox__server__pb2.SetVoicevoxReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InterruptVoicevox(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/voicevox_server.VoicevoxServerService/InterruptVoicevox',
            voicevox__server__pb2.InterruptVoicevoxRequest.SerializeToString,
            voicevox__server__pb2.InterruptVoicevoxReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVoicePlayFlg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/voicevox_server.VoicevoxServerService/SetVoicePlayFlg',
            voicevox__server__pb2.SetVoicePlayFlgRequest.SerializeToString,
            voicevox__server__pb2.SetVoicePlayFlgReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
