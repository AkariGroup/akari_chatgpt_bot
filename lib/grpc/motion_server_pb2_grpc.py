# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import motion_server_pb2 as motion__server__pb2


class MotionServerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetMotion = channel.unary_unary(
                '/motion_server.MotionServerService/SetMotion',
                request_serializer=motion__server__pb2.SetMotionRequest.SerializeToString,
                response_deserializer=motion__server__pb2.SetMotionReply.FromString,
                )
        self.ClearMotion = channel.unary_unary(
                '/motion_server.MotionServerService/ClearMotion',
                request_serializer=motion__server__pb2.ClearMotionRequest.SerializeToString,
                response_deserializer=motion__server__pb2.ClearMotionReply.FromString,
                )
        self.StopRepeat = channel.unary_unary(
                '/motion_server.MotionServerService/StopRepeat',
                request_serializer=motion__server__pb2.StopRepeatRequest.SerializeToString,
                response_deserializer=motion__server__pb2.StopRepeatReply.FromString,
                )
        self.SetWait = channel.unary_unary(
                '/motion_server.MotionServerService/SetWait',
                request_serializer=motion__server__pb2.SetWaitRequest.SerializeToString,
                response_deserializer=motion__server__pb2.SetWaitReply.FromString,
                )


class MotionServerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetMotion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearMotion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopRepeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetWait(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MotionServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetMotion': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMotion,
                    request_deserializer=motion__server__pb2.SetMotionRequest.FromString,
                    response_serializer=motion__server__pb2.SetMotionReply.SerializeToString,
            ),
            'ClearMotion': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearMotion,
                    request_deserializer=motion__server__pb2.ClearMotionRequest.FromString,
                    response_serializer=motion__server__pb2.ClearMotionReply.SerializeToString,
            ),
            'StopRepeat': grpc.unary_unary_rpc_method_handler(
                    servicer.StopRepeat,
                    request_deserializer=motion__server__pb2.StopRepeatRequest.FromString,
                    response_serializer=motion__server__pb2.StopRepeatReply.SerializeToString,
            ),
            'SetWait': grpc.unary_unary_rpc_method_handler(
                    servicer.SetWait,
                    request_deserializer=motion__server__pb2.SetWaitRequest.FromString,
                    response_serializer=motion__server__pb2.SetWaitReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'motion_server.MotionServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MotionServerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetMotion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/motion_server.MotionServerService/SetMotion',
            motion__server__pb2.SetMotionRequest.SerializeToString,
            motion__server__pb2.SetMotionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearMotion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/motion_server.MotionServerService/ClearMotion',
            motion__server__pb2.ClearMotionRequest.SerializeToString,
            motion__server__pb2.ClearMotionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopRepeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/motion_server.MotionServerService/StopRepeat',
            motion__server__pb2.StopRepeatRequest.SerializeToString,
            motion__server__pb2.StopRepeatReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetWait(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/motion_server.MotionServerService/SetWait',
            motion__server__pb2.SetWaitRequest.SerializeToString,
            motion__server__pb2.SetWaitReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
